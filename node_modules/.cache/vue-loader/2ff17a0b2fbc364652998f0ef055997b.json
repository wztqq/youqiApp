{"remainingRequest":"D:\\ht\\app\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!D:\\ht\\app\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\ht\\app\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\ht\\app\\src\\oilgas\\tianranqigongbao\\shenchan.vue?vue&type=template&id=496a27b6&scoped=true&","dependencies":[{"path":"D:\\ht\\app\\src\\oilgas\\tianranqigongbao\\shenchan.vue","mtime":1607318133801},{"path":"D:\\ht\\app\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1605147158029},{"path":"D:\\ht\\app\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1605147184540},{"path":"D:\\ht\\app\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1605147158029},{"path":"D:\\ht\\app\\node_modules\\vue-loader\\lib\\index.js","mtime":1605147184539}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}