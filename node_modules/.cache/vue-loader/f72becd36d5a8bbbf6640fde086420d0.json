{"remainingRequest":"D:\\ht\\app\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\ht\\app\\src\\oilgas\\youqifenxi\\chuqing.vue?vue&type=template&id=72ddc54c&scoped=true&","dependencies":[{"path":"D:\\ht\\app\\src\\oilgas\\youqifenxi\\chuqing.vue","mtime":1607316427418},{"path":"D:\\ht\\app\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1605147158029},{"path":"D:\\ht\\app\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1605147184540},{"path":"D:\\ht\\app\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1605147158029},{"path":"D:\\ht\\app\\node_modules\\vue-loader\\lib\\index.js","mtime":1605147184539}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}